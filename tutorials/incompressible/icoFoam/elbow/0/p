/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  7
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volScalarField;
    object      p;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

/*  
    "dimensions" contain 7 SI units: [kg, meter, seconds, ...] 
    Here is the dimension of the pressure/density which is [m^2][s^-2]
*/
dimensions      [0 2 -2 0 0 0 0];


/* 
    Intializing the pressure to 0 in entire domain
*/
internalField   uniform 0;

//  "boundaryField consists with "type" and "value"
boundaryField
{
    //  At walls the pressure boundary condition is "zeroGradient" (so-called Neumann boundary condition)
    wall-4
    {
        type            zeroGradient;
    }

    velocity-inlet-5
    {
        type            zeroGradient;
    }

    //  At velocity inlets (incompressible) the pressure BC is "zeroGradient" 
    velocity-inlet-6
    {
        type            zeroGradient;
    }

    //  atmospheric pressure outlet //
    pressure-outlet-7
    {
        type            fixedValue;
        value           uniform 0;
    }

    wall-8
    {
        type            zeroGradient;
    }

    /*
        - "frontAnDBackPlanes are the front and back planes of the geometry 
        in normal direction (z direction) for the 2D geometry"
        - The type is empty

        * It mut be noted that OpenFOAM consider always a 3D geometry, 
        such that even for a 2D case there is assumed one cell in the depth (z-direction),
        and the two faces in z direction called frontAndBackPlanes
    */
    frontAndBackPlanes
    {
        type            empty;
    }
}

// ************************************************************************* //
