/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  7
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volVectorField;
    object      U;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

//  dimension of velocity: [m^1][s^-1]
dimensions      [0 1 -1 0 0 0 0];

/*  Intializing zero on entire domain
    but it is a vector i.e., (0,0,0)
*/
internalField   uniform (0 0 0);

boundaryField
{
    //  wall velocity BC: noSlip
    wall-4
    {
        type            noSlip;
    }

    //  inlet velocity: 1 m/s in x-direction
    velocity-inlet-5
    {
        type            fixedValue;
        value           uniform (1 0 0);
    }

    //  inlet velocity: 3 m/s in y-direction
    velocity-inlet-6
    {
        type            fixedValue;
        value           uniform (0 3 0);
    }

    //  At pressure outlets the velocity BC is "zeroGradient"
    pressure-outlet-7
    {
        type            zeroGradient;
    }

    wall-8
    {
        type            noSlip;
    }

    /*
        - "frontAnDBackPlanes are the front and back planes of the geometry 
        in normal direction (z direction) for the 2D geometry"
        - The type is empty

        * It mut be noted that OpenFOAM consider always a 3D geometry, 
        such that even for a 2D case there is assumed one cell in the depth (z-direction),
        and the two faces in z direction called frontAndBackPlanes
    */
    frontAndBackPlanes
    {
        type            empty;
    }
}

// ************************************************************************* //
